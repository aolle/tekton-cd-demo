---

- name: create yaml to deploy central
  ansible.builtin.template:
    src: central.yaml.j2
    dest: "{{ centralYaml }}"
    mode: '0644'

- name: create namespace to deploy central
  ansible.builtin.shell:
    cmd: oc new-project "{{ centralNamespace }}"
  ignore_errors: yes

- name: delete limits in the central namespace
  ansible.builtin.shell:
    cmd: oc delete limitrange -n "{{ centralNamespace }} {{ centralNamespace }}-core-resource-limits"
  ignore_errors: yes 

- name: deploy central
  ansible.builtin.shell:
    cmd: oc apply -f "{{ centralYaml }}" -n "{{ centralNamespace }}"

- name: get central password
  ansible.builtin.shell:
    cmd: oc -n "{{ centralNamespace }}" get secret central-htpasswd -o jsonpath="{.data['password']}" | base64 -d
  register: centralPass
  retries: "{{ retries }}"
  delay: "{{ delay }}"

- name: get central url
  ansible.builtin.shell:
    cmd: oc -n "{{ centralNamespace }}" get routes/central -o jsonpath='{.spec.host}'
  register: centralUrl
  retries: "{{ retries }}"
  delay: "{{ delay }}"
  
- name: setting var to store admin password
  ansible.builtin.set_fact:
    acsAdminPass: "{{ centralPass.stdout }}"

- name: setting var to store acs's console url
  ansible.builtin.set_fact:
    acsUrl: "{{ centralUrl.stdout_lines[0] }}"

- name: print central connection data on stdout
  debug:
    msg: "Central password for admin user: {{ acsAdminPass }} ACS console: https://{{ acsUrl }}"

  